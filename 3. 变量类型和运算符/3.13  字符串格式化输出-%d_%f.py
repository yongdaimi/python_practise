# 使用%d, %f, %c 等占位符可以实现格式化输出功能。

# %d 格式化输出
age = 20
print("张三今年%d岁了" % age) # 输出：张三今年20岁了。注意：字符串表达式与变量之间不必再使用逗号进行分割，变量前需要加入%号

# %d 格式化输出多个变量
son_age = 20
father_age = 40
print("小明今年%d岁了,他爸爸今年%d岁了" %(son_age, father_age)) # 输出：小明今年20岁了,他爸爸今年40岁。

'''
注意：输出多个变量时 多个变量需要使用%()进行包裹。而不是像C语言那样写成 %a, %b, %c的形式
'''


# 指定输出宽度
# 指定下列整数的输出宽度为最少10个字符
n = 1234567
print("n = %10d" %n) # 输出：n =    1234567

# 指定下列字符串的输出宽度为最少35个字符
s = "http://www.baidu.com"
print("s = %35s" %s)# 输出：s =                http://www.baidu.com

'''
Tips: 对于整数和字符串，当数据的实际宽度小于指定宽度时，会在【左侧】以空格进行补齐，当数据的实际宽度大于指定宽度时, 会将原数据直接输出

'''

# 指定对齐方式
'''
- 号用于指定左对齐
+ 号用于指定输出的数字总是带符号，正数带+，负数带-
0 用于指定宽度不足时补0而不是补空格
'''

n = 123456
print("%-10d" %n) # 输出：123456    

n = 3.14
print("%010f" %n) # 输出：003.140000

f = 140.5
print("f = %-+010f" %f) # 输出：f = +140.500000

i = 123
print("i = %-+10d" %i) # 输出：i = +123      


# 指定小数输出精度

# 最少宽度为8，保留3位有效数字
f = 3.141592653
print("f = %8.3f" %f) # 输出：f =    3.142


# 最小宽度为8，小数点后保留3位，左边补0
print("f = %08.3f" %f) # 输出：f = 0003.142

# 最小宽度为8，小数点后保留3位，左边补0，带符号
print("f = %+08.3f" %f) # 输出：f = +003.142

